(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.turf = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function area(e){if("FeatureCollection"===e.type){for(var r=0,t=0;r<e.features.length;r++)e.features[r].geometry&&(t+=geometryArea(e.features[r].geometry));return t}return geometryArea("Feature"===e.type?e.geometry:e)}var geometryArea=require("geojson-area").geometry;module.exports=area;

},{"geojson-area":15}],2:[function(require,module,exports){
var polygon=require("@turf/helpers").polygon;module.exports=function(o){var r=[o[0],o[1]],e=[o[0],o[3]],n=[o[2],o[3]],l=[o[2],o[1]];return polygon([[r,l,n,e,r]])};

},{"@turf/helpers":7}],3:[function(require,module,exports){
var each=require("@turf/meta").coordEach;module.exports=function(r){var e=[1/0,1/0,-(1/0),-(1/0)];return each(r,function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])}),e};
},{"@turf/meta":10}],4:[function(require,module,exports){
var bbox=require("@turf/bbox"),point=require("@turf/helpers").point;module.exports=function(r){var e=bbox(r),o=(e[0]+e[2])/2,t=(e[1]+e[3])/2;return point([o,t])};

},{"@turf/bbox":3,"@turf/helpers":7}],5:[function(require,module,exports){
var each=require("@turf/meta").coordEach,point=require("@turf/helpers").point;module.exports=function(r){var e=0,t=0,o=0;return each(r,function(r){e+=r[0],t+=r[1],o++},!0),point([e/o,t/o])};

},{"@turf/helpers":7,"@turf/meta":10}],6:[function(require,module,exports){
var getCoord=require("@turf/invariant").getCoord,radiansToDistance=require("@turf/helpers").radiansToDistance;module.exports=function(t,a,r){var o=Math.PI/180,e=getCoord(t),n=getCoord(a),s=o*(n[1]-e[1]),i=o*(n[0]-e[0]),h=o*e[1],M=o*n[1],d=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(i/2),2)*Math.cos(h)*Math.cos(M);return radiansToDistance(2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)),r)};

},{"@turf/helpers":7,"@turf/invariant":9}],7:[function(require,module,exports){
function feature(e,r){return{type:"Feature",properties:r||{},geometry:e}}module.exports.feature=feature,module.exports.point=function(e,r){if(!Array.isArray(e))throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");return feature({type:"Point",coordinates:e.slice()},r)},module.exports.polygon=function(e,r){if(!e)throw new Error("No coordinates passed");for(var o=0;o<e.length;o++){var t=e[o];if(t.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var n=0;n<t[t.length-1].length;n++)if(t[t.length-1][n]!==t[0][n])throw new Error("First and last Position are not equivalent.")}return feature({type:"Polygon",coordinates:e},r)},module.exports.lineString=function(e,r){if(!e)throw new Error("No coordinates passed");return feature({type:"LineString",coordinates:e},r)},module.exports.featureCollection=function(e){return{type:"FeatureCollection",features:e}},module.exports.multiLineString=function(e,r){if(!e)throw new Error("No coordinates passed");return feature({type:"MultiLineString",coordinates:e},r)},module.exports.multiPoint=function(e,r){if(!e)throw new Error("No coordinates passed");return feature({type:"MultiPoint",coordinates:e},r)},module.exports.multiPolygon=function(e,r){if(!e)throw new Error("No coordinates passed");return feature({type:"MultiPolygon",coordinates:e},r)},module.exports.geometryCollection=function(e,r){return feature({type:"GeometryCollection",geometries:e},r)};var factors={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373};module.exports.radiansToDistance=function(e,r){var o=factors[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e*o},module.exports.distanceToRadians=function(e,r){var o=factors[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e/o},module.exports.distanceToDegrees=function(e,r){var o=factors[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e/o*57.2958};

},{}],8:[function(require,module,exports){
function inRing(n,r){for(var t=!1,e=0,i=r.length-1;e<r.length;i=e++){var o=r[e][0],a=r[e][1],g=r[i][0],v=r[i][1],f=a>n[1]!=v>n[1]&&n[0]<(g-o)*(n[1]-a)/(v-a)+o;f&&(t=!t)}return t}var invariant=require("@turf/invariant");module.exports=function(n,r){var t=invariant.getCoord(n),e=r.geometry.coordinates;"Polygon"===r.geometry.type&&(e=[e]);for(var i=0,o=!1;i<e.length&&!o;i++)if(inRing(t,e[i][0])){for(var a=!1,g=1;g<e[i].length&&!a;)inRing(t,e[i][g])&&(a=!0),g++;a||(o=!0)}return o};

},{"@turf/invariant":9}],9:[function(require,module,exports){
function getCoord(e){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])return e;if(e){if("Feature"===e.type&&e.geometry&&"Point"===e.geometry.type&&Array.isArray(e.geometry.coordinates))return e.geometry.coordinates;if("Point"===e.type&&Array.isArray(e.coordinates))return e.coordinates}throw new Error("A coordinate, feature, or point geometry is required")}function geojsonType(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}function featureOf(e,r,t){if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function collectionOf(e,r,t){if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}module.exports.geojsonType=geojsonType,module.exports.collectionOf=collectionOf,module.exports.featureOf=featureOf,module.exports.getCoord=getCoord;
},{}],10:[function(require,module,exports){
function coordEach(e,o,t){var r,n,c,l,u,p,i,a,f,s,h=0,d="FeatureCollection"===e.type,y="Feature"===e.type,g=d?e.features.length:1;for(r=0;r<g;r++)for(f=d?e.features[r].geometry:y?e.geometry:e,s="GeometryCollection"===f.type,i=s?f.geometries.length:1,l=0;l<i;l++)if(p=s?f.geometries[l]:f,a=p.coordinates,h=!t||"Polygon"!==p.type&&"MultiPolygon"!==p.type?0:1,"Point"===p.type)o(a);else if("LineString"===p.type||"MultiPoint"===p.type)for(n=0;n<a.length;n++)o(a[n]);else if("Polygon"===p.type||"MultiLineString"===p.type)for(n=0;n<a.length;n++)for(c=0;c<a[n].length-h;c++)o(a[n][c]);else if("MultiPolygon"===p.type)for(n=0;n<a.length;n++)for(c=0;c<a[n].length;c++)for(u=0;u<a[n][c].length-h;u++)o(a[n][c][u]);else{if("GeometryCollection"!==p.type)throw new Error("Unknown Geometry Type");for(n=0;n<p.geometries.length;n++)coordEach(p.geometries[n],o,t)}}function coordReduce(e,o,t,r){return coordEach(e,function(e){t=o(t,e)},r),t}function propEach(e,o){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length;t++)o(e.features[t].properties);break;case"Feature":o(e.properties)}}function propReduce(e,o,t){return propEach(e,function(e){t=o(t,e)}),t}function featureEach(e,o){if("Feature"===e.type)o(e);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length;t++)o(e.features[t])}function coordAll(e){var o=[];return coordEach(e,function(e){o.push(e)}),o}module.exports.coordEach=coordEach,module.exports.coordReduce=coordReduce,module.exports.propEach=propEach,module.exports.propReduce=propReduce,module.exports.featureEach=featureEach,module.exports.coordAll=coordAll;

},{}],11:[function(require,module,exports){
var point=require("@turf/helpers").point,featurecollection=require("@turf/helpers").featureCollection,distance=require("@turf/distance");module.exports=function(e,t,r){for(var i=featurecollection([]),o=t/distance(point([e[0],e[1]]),point([e[2],e[1]]),r),n=o*(e[2]-e[0]),u=t/distance(point([e[0],e[1]]),point([e[0],e[3]]),r),a=u*(e[3]-e[1]),p=e[0];p<=e[2];){for(var c=e[1];c<=e[3];)i.features.push(point([p,c])),c+=a;p+=n}return i};

},{"@turf/distance":6,"@turf/helpers":7}],12:[function(require,module,exports){
var featurecollection=require("@turf/helpers").featureCollection,point=require("@turf/helpers").point,polygon=require("@turf/helpers").polygon,distance=require("@turf/distance");module.exports=function(e,r,t){for(var o=featurecollection([]),n=r/distance(point([e[0],e[1]]),point([e[2],e[1]]),t),i=n*(e[2]-e[0]),u=r/distance(point([e[0],e[1]]),point([e[0],e[3]]),t),p=u*(e[3]-e[1]),l=e[0];l<=e[2];){for(var a=e[1];a<=e[3];){var f=polygon([[[l,a],[l,a+p],[l+i,a+p],[l+i,a],[l,a]]]);o.features.push(f),a+=p}l+=i}return o};

},{"@turf/distance":6,"@turf/helpers":7}],13:[function(require,module,exports){
var featurecollection=require("@turf/helpers").featureCollection,polygon=require("@turf/helpers").polygon,distance=require("@turf/distance");module.exports=function(e,o,r){for(var n=featurecollection([]),t=o/distance([e[0],e[1]],[e[2],e[1]],r),u=t*(e[2]-e[0]),l=o/distance([e[0],e[1]],[e[0],e[3]],r),p=l*(e[3]-e[1]),s=0,a=e[0];a<=e[2];){for(var f=0,i=e[1];i<=e[3];)s%2===0&&f%2===0?n.features.push(polygon([[[a,i],[a,i+p],[a+u,i],[a,i]]]),polygon([[[a,i+p],[a+u,i+p],[a+u,i],[a,i+p]]])):s%2===0&&f%2===1?n.features.push(polygon([[[a,i],[a+u,i+p],[a+u,i],[a,i]]]),polygon([[[a,i],[a,i+p],[a+u,i+p],[a,i]]])):f%2===0&&s%2===1?n.features.push(polygon([[[a,i],[a,i+p],[a+u,i+p],[a,i]]]),polygon([[[a,i],[a+u,i+p],[a+u,i],[a,i]]])):f%2===1&&s%2===1&&n.features.push(polygon([[[a,i],[a,i+p],[a+u,i],[a,i]]]),polygon([[[a,i+p],[a+u,i+p],[a+u,i],[a,i+p]]])),i+=p,f++;s++,a+=u}return n};

},{"@turf/distance":6,"@turf/helpers":7}],14:[function(require,module,exports){
var inside=require("@turf/inside"),featureCollection=require("@turf/helpers").featureCollection;module.exports=function(e,r){for(var t=featureCollection([]),u=0;u<r.features.length;u++)for(var f=0;f<e.features.length;f++){var a=inside(e.features[f],r.features[u]);a&&t.features.push(e.features[f])}return t};

},{"@turf/helpers":7,"@turf/inside":8}],15:[function(require,module,exports){
function geometry(e){var r,t=0;switch(e.type){case"Polygon":return polygonArea(e.coordinates);case"MultiPolygon":for(r=0;r<e.coordinates.length;r++)t+=polygonArea(e.coordinates[r]);return t;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0;case"GeometryCollection":for(r=0;r<e.geometries.length;r++)t+=geometry(e.geometries[r]);return t}}function polygonArea(e){var r=0;if(e&&e.length>0){r+=Math.abs(ringArea(e[0]));for(var t=1;t<e.length;t++)r-=Math.abs(ringArea(e[t]))}return r}function ringArea(e){var r,t,n,o,a,g,s=0,l=e.length;if(l>2){for(i=0;i<l;i++)i===l-2?(o=l-2,a=l-1,g=0):i===l-1?(o=l-1,a=0,g=1):(o=i,a=i+1,g=i+2),r=e[o],t=e[a],n=e[g],s+=(rad(n[0])-rad(r[0]))*Math.sin(rad(t[1]));s=s*wgs84.RADIUS*wgs84.RADIUS/2}return s}function rad(e){return e*Math.PI/180}var wgs84=require("wgs84");module.exports.geometry=geometry,module.exports.ring=ringArea;
},{"wgs84":16}],16:[function(require,module,exports){
module.exports.RADIUS=6378137,module.exports.FLATTENING=1/298.257223563,module.exports.POLAR_RADIUS=6356752.3142;
},{}],17:[function(require,module,exports){
module.exports={area:require("@turf/area"),bbox:require("@turf/bbox"),bboxPolygon:require("@turf/bbox-polygon"),center:require("@turf/center"),centroid:require("@turf/centroid"),within:require("@turf/within"),inside:require("@turf/inside"),helpers:require("@turf/helpers"),triangleGrid:require("@turf/triangle-grid"),pointGrid:require("@turf/point-grid"),squareGrid:require("@turf/square-grid")};
},{"@turf/area":1,"@turf/bbox":3,"@turf/bbox-polygon":2,"@turf/center":4,"@turf/centroid":5,"@turf/helpers":7,"@turf/inside":8,"@turf/point-grid":11,"@turf/square-grid":12,"@turf/triangle-grid":13,"@turf/within":14}]},{},[17])(17)
});